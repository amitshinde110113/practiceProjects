[{"/home/am-n3/AMITSHIDE/react-todo-hooks/src/index.js":"1","/home/am-n3/AMITSHIDE/react-todo-hooks/src/App.js":"2","/home/am-n3/AMITSHIDE/react-todo-hooks/src/reportWebVitals.js":"3","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Serivces/store/store-config.js":"4","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Serivces/intreceptor.js":"5","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Serivces/hiostory.js":"6","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Components/protected-Route-Component.js":"7","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Components/Todo-List-Component.js":"8","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Components/signup/Signup-Component.js":"9","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Components/login-component/Login-Component.js":"10","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Serivces/reducers/todos-modal-reducer.js":"11","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Serivces/reducers/todos-reducer.js":"12","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Serivces/auth-service.js":"13","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Components/Todo-Component.js":"14","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Serivces/todo-service.js":"15","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Components/Header-Component.js":"16","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Components/signup/error.js":"17","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Components/todo-modal/Todo-Modal-Component.js":"18","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Serivces/actions/todo-actions.js":"19","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Serivces/actions/todo-modal-actions.js":"20","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Serivces/htttp-service.js":"21"},{"size":846,"mtime":1612160777740,"results":"22","hashOfConfig":"23"},{"size":1218,"mtime":1612157888254,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1611042531819,"results":"25","hashOfConfig":"23"},{"size":398,"mtime":1611303151909,"results":"26","hashOfConfig":"23"},{"size":849,"mtime":1611504298520,"results":"27","hashOfConfig":"23"},{"size":87,"mtime":1611324522677,"results":"28","hashOfConfig":"23"},{"size":819,"mtime":1612160688436,"results":"29","hashOfConfig":"23"},{"size":4271,"mtime":1612166182699,"results":"30","hashOfConfig":"23"},{"size":3435,"mtime":1611746044981,"results":"31","hashOfConfig":"23"},{"size":2284,"mtime":1611727600132,"results":"32","hashOfConfig":"23"},{"size":1232,"mtime":1612164762555,"results":"33","hashOfConfig":"23"},{"size":706,"mtime":1611307601955,"results":"34","hashOfConfig":"23"},{"size":1114,"mtime":1611744456932,"results":"35","hashOfConfig":"23"},{"size":2251,"mtime":1612164809011,"results":"36","hashOfConfig":"23"},{"size":554,"mtime":1611306655383,"results":"37","hashOfConfig":"23"},{"size":1042,"mtime":1612161883466,"results":"38","hashOfConfig":"23"},{"size":145,"mtime":1611744014817,"results":"39","hashOfConfig":"23"},{"size":3299,"mtime":1612166074041,"results":"40","hashOfConfig":"23"},{"size":305,"mtime":1611306264247,"results":"41","hashOfConfig":"23"},{"size":436,"mtime":1611306228250,"results":"42","hashOfConfig":"23"},{"size":496,"mtime":1611306649694,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"d8ljsf",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"/home/am-n3/AMITSHIDE/react-todo-hooks/src/index.js",[],["98","99"],"/home/am-n3/AMITSHIDE/react-todo-hooks/src/App.js",["100"],"import './App.css';\nimport { Component } from 'react';\nimport TodoListComponent from './Components/Todo-List-Component';\nimport interceptor from './Serivces/intreceptor'\nimport { Router, Route, Switch } from 'react-router-dom';\nimport LoginComponent from './Components/login-component/Login-Component'\nimport history from './Serivces/hiostory';\nimport ProtectRouteComponent from './Components/protected-Route-Component'\nimport SignupComponent from './Components/signup/Signup-Component'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App container\">\n        <Router history={history} >\n          <Switch>\n            <ProtectRouteComponent component={TodoListComponent} exact path=\"/todos\">\n              {/* <Header />\n              <TodoListComponent /> */}\n            </ProtectRouteComponent>\n            <Route exact path=\"/login\" render={data => <LoginComponent {...data} />}>\n            </Route>\n            <Route render={data => <LoginComponent {...data} />} exact path=\"/\">\n            </Route>\n            <Route exact path=\"/signup\" render={data=><SignupComponent {...data} />}></Route>\n          </Switch>\n        </Router>\n      </div>\n    )\n  };\n}\n\nexport default App;\n","/home/am-n3/AMITSHIDE/react-todo-hooks/src/reportWebVitals.js",[],"/home/am-n3/AMITSHIDE/react-todo-hooks/src/Serivces/store/store-config.js",["101"],"import { createStore, combineReducers } from 'redux';\nimport todosReducer from '../reducers/todos-reducer'\nimport { modalReducer, formReducer } from '../reducers/todos-modal-reducer'\nexport default () => {\n    const store = createStore(\n        combineReducers({\n            todos: todosReducer,\n            todoModal: modalReducer,\n            todoForm: formReducer\n        }))\n    return store;\n}","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Serivces/intreceptor.js",[],"/home/am-n3/AMITSHIDE/react-todo-hooks/src/Serivces/hiostory.js",[],"/home/am-n3/AMITSHIDE/react-todo-hooks/src/Components/protected-Route-Component.js",["102"],"import authService from '../Serivces/auth-service'\nimport { Redirect, Route } from 'react-router-dom'\nimport React, { useEffect } from 'react';\nimport { toast } from 'react-toastify';\nexport const UserContext = React.createContext();\n\nfunction ProtectRouteComponent(props) {\n  let user = {}\n  useEffect(() => {\n    if (!authService.getLoginStatus()) {\n      toast.error('Please login to continue.')\n    }\n    user = authService.getCurrentUser()\n  });\n  return (\n    <Route path={props.path} render={data =>\n      authService.getLoginStatus() ?\n        (\n          // <UserContext.Consumer user={user}>\n          <props.component {...data}></props.component>\n          // </UserContext.Consumer>\n        ) :\n        (<Redirect to={{ pathname: '/' }}></Redirect>)}>\n    </Route>\n  )\n}\nexport default ProtectRouteComponent","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Components/Todo-List-Component.js",["103","104","105","106","107","108"],"import React, { Component, useEffect, useState, useReducer } from 'react';\nimport TodoComponent from './Todo-Component'\nimport './Todo-List-Component.css'\nimport { connect } from 'react-redux'\nimport todoService from '../Serivces/todo-service'\nimport { initilizeTodo } from '../Serivces/actions/todo-actions'\nimport TodoModalComponent from './todo-modal/Todo-Modal-Component'\nimport { openModal, resetValidiation, closeModal } from '../Serivces/actions/todo-modal-actions'\nimport { toast } from 'react-toastify';\nimport Header from '../Components/Header-Component'\nimport { css } from \"@emotion/core\";\nimport HashLoader from \"react-spinners/HashLoader\";\nimport { addTodo, updateTodo } from '../Serivces/actions/todo-actions'\nimport todoReducer from '../Serivces/reducers/todos-reducer'\nimport { modalReducer } from '../Serivces/reducers/todos-modal-reducer'\n\n\n\nconst mapStoreProps = (state) => {\n    return {\n        ...state\n    }\n};\n\n\nconst TodoListComponent = (props) => {\n    // const { todos, dispatch } = useReducer(todoReducer, []);\n    const initial = []\n    const initialState = {\n        isModalOpen: false,\n        isOpenForUpdate: false,\n        todo: {\n            title: '',\n            description: '',\n        }\n    }\n    const [todos, dispatch] = useReducer(todoReducer, initial)\n    const [modal, modalDispatch] = useReducer(modalReducer, initialState)\n\n    console.log('todos', todos)\n    const override = css`\n      display: block;\n      margin: 0 auto;\n      border-color: red;\n    `;\n    const color = '#ffffff'\n    const [isLoading, setLoading] = useState(false)\n    const [isActionPerformed, setActionPerformed] = useState(false)\n\n    useEffect(() => {\n        todoService.getTodos().then(res => {\n            setLoading(false)\n            setTodos(res)\n\n        }).catch(error => {\n            console.log('error', error)\n            toast.error(error.message || 'Error while getting tasks.')\n            props.history.replace('/')\n            setLoading(false)\n        })\n    }, [isActionPerformed])\n\n\n    const handleShow = () => {\n        modalDispatch(openModal());\n        // props.dispatch(resetValidiation())\n    };\n    const handleClose = () => {\n        modalDispatch(closeModal());\n        // props.dispatch(resetValidiation())\n    };\n\n    const setTodos = ({ totalCount, notes }) => {\n        console.table(notes)\n        // props.dispatch(initilizeTodo(notes))\n        // props.dispatch(initilizeTodo(notes))\n\n        dispatch(initilizeTodo(notes));\n    }\n    const handleActionPerformed = () => {\n        setActionPerformed(!isActionPerformed)\n    }\n    const handleAddTodo = (todo) => {\n        todoService.createTodo(todo).then(res => {\n            dispatch(addTodo(res))\n            toast.success('Created successfully.')\n            handleClose()\n        }).catch(error => {\n            toast.error(error.message || 'Error while adding task.')\n        })\n    }\n    const handleUpdateTodo = (todo) => {\n        todoService.updateTodo(todo).then(res => {\n            dispatch(updateTodo(todo))\n            toast.success('Updated successfully.')\n            handleClose()\n\n        }).catch(error => {\n            toast.error(error.message || 'Error while updating task.')\n        })\n    }\n    return (\n        <React.Fragment>\n            {console.log('todos', todos)}\n            <Header {...props} />\n            <div className='main'>\n                <div className=\"bg-dark p-2 justify-content-between\" style={{ display: \"flex\" }}>\n                    <h5 className=\"text-light mt-2\" ># My Todos</h5>\n                    <button className=\"btn btn-primary btn-sm\"\n                        onClick={handleShow}     >\n                        Add Todo  </button>\n                </div>\n                <div className='col-12 text-center'>\n                    <TodoComponent modalDispatch={modalDispatch} dispatch={dispatch} onUpdate={handleUpdateTodo} onAction={handleActionPerformed} todos={todos} />\n                </div>\n                <TodoModalComponent modalDispatch={modalDispatch} modal={modal} handleAddTodo={handleAddTodo} handleUpdateTodo={handleUpdateTodo} />\n            </div>\n            <HashLoader css={override} size={50} loading={isLoading} />\n        </React.Fragment>\n    )\n}\nexport default TodoListComponent ","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Components/signup/Signup-Component.js",["109","110","111"],"import React, { useState } from 'react'\nimport { Formik, Form, Field, ErrorMessage, FieldArray, FastField } from 'formik'\nimport * as Yup from 'yup'\nimport TextError from './error'\nimport { toast } from 'react-toastify';\nimport authService from '../../Serivces/auth-service'\nimport { Link } from 'react-router-dom';\nconst initialValues = {\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n}\nconst validationSchema = Yup.object({\n    name: Yup.string().required('Name is required.'),\n    email: Yup.string()\n        .email('Invalid email format')\n        .required('Email is required.'),\n    password: Yup.string().required('Password is required.'),\n    confirmPassword: Yup.string().when(\"password\", {\n        is: val => (val && val.length > 0 ? true : false),\n        then: Yup.string().oneOf(\n            [Yup.ref(\"password\")],\n            \"Both password need to be the same\"\n        )\n    })\n})\n\nfunction SignupForm(props) {\n    const onSubmit = (values, submitProps) => {\n        authService.signUp(values).then(res => {\n            toast.success('Registered successfully,Please login to continue.')\n            submitProps.setSubmitting(false)\n            submitProps.resetForm()\n            props.history.push('/login')\n        }).catch(error => {\n            toast.error(error.message || 'Error while registration')\n            submitProps.setSubmitting(false)\n            submitProps.resetForm()\n        })\n    }\n    return (\n        <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n        >\n            {formik => {\n                console.log('Formik props', formik)\n                return (\n                    <Form className=\"formBody\" >\n                        <div className=\"form-group\">\n                            <label>Name</label>\n                            <Field className=\"form-control\" type=\"text\" id=\"name\" name=\"name\" />\n                            <ErrorMessage name=\"name\" component={TextError} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Email</label>\n                            <Field className=\"form-control\" type=\"email\" id=\"email\" name=\"email\" />\n                            <ErrorMessage name=\"email\" component={TextError} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Password</label>\n                            <Field className=\"form-control\" type=\"password\" id=\"password\" name=\"password\" />\n                            <ErrorMessage name=\"password\" component={TextError} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>ComfirmPassword</label>\n                            <Field className=\"form-control\" type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" />\n                            <ErrorMessage name=\"confirmPassword\" component={TextError} />\n                        </div>\n                        <button type=\"submit\" disabled={!formik.isValid || formik.isSubmitting} className=\"btn btn-primary\"> SignUp</button>\n                        <Link className=\"pull-right mt-2\" to='/login'>Registered? Login here.</Link>\n                   \n                    </Form>\n                )\n            }}\n        </Formik>\n    )\n}\n\nexport default SignupForm","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Components/login-component/Login-Component.js",[],"/home/am-n3/AMITSHIDE/react-todo-hooks/src/Serivces/reducers/todos-modal-reducer.js",[],"/home/am-n3/AMITSHIDE/react-todo-hooks/src/Serivces/reducers/todos-reducer.js",["112"],"const todos = [];\nexport default (state = todos, action) => {\n    switch (action.type) {\n        case 'INITILIZE_TODO':\n            return [...action.todos]\n        case 'ADD_TODO':\n            return [...state, action.todo];\n\n        case 'REMOVE_TODO':\n            return state.filter(({ _id }) => _id !== action._id);\n\n        case 'UPDATE_TODO':\n            return state.map(todo => {\n                if (todo._id === action.todo._id) {\n                    return {\n                        ...todo,\n                        ...action.todo\n                    }\n                } else {\n                    return todo\n                }\n            });\n\n        default:\n            return state;\n    }\n}","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Serivces/auth-service.js",["113"],"import HttpService from './htttp-service'\nimport jwt from 'jwt-decode'\n\nclass AuthService {\n    constructor() {\n        this.httpService = new HttpService()\n        this.isLoggedIn = false;\n        this.user = {}\n    }\n    login = (body) => {\n        return this.httpService.post(`/api/users/login`, body).then(resp => {\n            localStorage.setItem('token', JSON.stringify(resp.token))\n            localStorage.setItem('user', JSON.stringify(resp.user))\n            this.user = resp.user;\n        });\n    }\n    signUp = (body) => {\n        return this.httpService.post(`/api/users/signup`, body);\n    }\n    getLoginStatus = () => {\n        try {\n            const token = localStorage.getItem('token');\n            const decoded = jwt(token);\n            return true\n        } catch (e) {\n            this.logout()\n            return false\n        }\n    }\n    getCurrentUser = () => {\n        return this.user = JSON.parse(localStorage.getItem('user'));\n    }\n    logout = () => {\n        localStorage.clear()\n        this.user = {};\n        this.isLoggedIn = false;\n    }\n}\n\nexport default new AuthService()\n","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Components/Todo-Component.js",["114","115","116"],"import Table from 'react-bootstrap/Table'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport todoService from '../Serivces/todo-service'\nimport { removeTodo } from '../Serivces/actions/todo-actions'\nimport { openModalForUpdate } from '../Serivces/actions/todo-modal-actions'\nimport { toast } from 'react-toastify';\nimport todoReducer from '../Serivces/reducers/todos-reducer'\n\nconst TodoComponent = (props) => {\n    const handleDelete = (id) => {\n        todoService.removeTodo(id).then(res => {\n            props.dispatch(removeTodo(id))\n            toast.success('Deleted successfully.')\n            props.onAction()\n\n        }).catch(error => {\n            toast.error(error.message || 'Error while deliting task.')\n        })\n    }\n    const handleUpdate = (todo) => {\n        props.modalDispatch(openModalForUpdate(todo))\n        props.onAction()\n    }\n\n    const { todos } = props;\n    return (\n        <Table striped hover>\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Task</th>\n                    <th>Description</th>\n                    <th>CreatedAt</th>\n                    <th>Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n                {todos.map((todo, index) => {\n                    return (\n                        <tr key={todo._id}>\n                            <td>{index + 1}</td>\n                            <td>{todo.title}</td>\n                            <td>{todo.description}</td>\n                            <td>{\n                                new Intl.DateTimeFormat('en-IN', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(new Date(todo.createdAt))\n                            }</td>\n\n                            <td>\n                                <i className=\"fa fa-edit mr-2 text-info\" onClick={() => handleUpdate(todo)}  ></i>\n                                <i className=\"fa fa-trash text-danger\" onClick={() => handleDelete(todo._id)}></i>\n                            </td>\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </Table>\n    )\n\n\n}\n\nexport default TodoComponent","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Serivces/todo-service.js",[],"/home/am-n3/AMITSHIDE/react-todo-hooks/src/Components/Header-Component.js",["117"],"import { Component } from \"react\";\nimport { Button, Navbar, Nav, Form } from 'react-bootstrap';\nimport './Header-Component.css';\nimport authService from \"../Serivces/auth-service\";\n\nconst HeaderComponent = (props) => {\n    const user = authService.getCurrentUser()\n    const handleLogout = () => {\n        authService.logout();\n        props.history.push('/')\n    }\n    const titleCase = (str) => {\n        return str.toLowerCase().split(' ').map(function (word) {\n            return (word.charAt(0).toUpperCase() + word.slice(1));\n        }).join(' ');\n    }\n    return (\n        <Navbar bg=\"light\" variant=\"light\">\n            <Navbar.Brand>My Todo App</Navbar.Brand>\n            <Nav className=\"mr-auto\">\n            </Nav>\n            <Form inline>\n                <Navbar.Brand className=\"justify-content-end text-success\">Hello  {titleCase(user.name)}</Navbar.Brand>\n                <Button variant=\"outline-danger\" onClick={handleLogout} >Logout</Button>\n            </Form>\n        </Navbar>\n    );\n\n\n}\n\nexport default HeaderComponent","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Components/signup/error.js",[],"/home/am-n3/AMITSHIDE/react-todo-hooks/src/Components/todo-modal/Todo-Modal-Component.js",["118","119","120","121","122","123","124"],"import './Todo-Modal-Component.css'\nimport { Component, useEffect, useReducer } from 'react';\nimport { connect } from 'react-redux';\nimport { closeModal, validiateForm, updateTodoModal } from '../../Serivces/actions/todo-modal-actions'\nimport { Modal, Form } from \"react-bootstrap\"\nimport todoService from '../../Serivces/todo-service'\nimport { addTodo, updateTodo } from '../../Serivces/actions/todo-actions'\nimport { toast } from 'react-toastify';\nimport { formReducer } from '../../Serivces/reducers/todos-modal-reducer'\n\nconst TodoModalComponent = (props) => {\n    const [form, formDispatch] = useReducer(formReducer, { isValidiated: false })\n\n    const user = JSON.parse(localStorage.getItem('user'))\n    const getTodo = () => {\n        return props.modal.todo;\n    }\n    const handleClose = () => {\n        props.modalDispatch(closeModal())\n    };\n\n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n            toast.error('Please fill all required fields')\n\n        } else {\n            props.modal.isOpenForUpdate ? updatingTodo() : addingTodo()\n            event.preventDefault();\n            event.stopPropagation();\n            handleClose()\n\n        }\n        formDispatch(validiateForm())\n    };\n    const handleFormChange = (event) => {\n        const { name, value } = event.target\n        props.modalDispatch(updateTodoModal({ key: name, value: value }))\n    }\n    const addingTodo = () => {\n        const todo = getTodo()\n        todo['user'] = user._id\n        handleClose()\n        props.handleAddTodo(todo)\n\n    }\n    const updatingTodo = () => {\n        const todo = getTodo()\n        handleClose()\n        props.handleUpdateTodo(todo)\n    }\n\n    const todo = getTodo()\n    return (\n        <Modal show={props.modal.isModalOpen} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>{props.modal.isOpenForUpdate ? 'Update Todo' : 'Add Todo'}</Modal.Title>\n            </Modal.Header>\n            <Form noValidate validated={form.isValidiated} onSubmit={handleSubmit}>\n                <Modal.Body>\n                    <Form.Group controlId=\"formBasictitle\">\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control name=\"title\" value={todo.title} onChange={handleFormChange} required type=\"text\" placeholder=\"Enter Title\" />\n                    </Form.Group>\n                    <Form.Group controlId=\"description\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control required as=\"textarea\" rows=\"3\" name=\"description\" value={todo.description} onChange={handleFormChange} />\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button className=\"btn btn-secondary btn-sm\" type=\"button\" onClick={handleClose}>Close  </button>\n                    <button className=\"btn btn-primary btn-sm\" type='submit' >{props.modal.isOpenForUpdate ? 'Update' : 'Add'}</button>\n                </Modal.Footer>\n            </Form>\n        </Modal>\n    );\n\n}\nconst modalStateMapper = (state => {\n    return {\n        ...state\n    }\n})\nexport default TodoModalComponent","/home/am-n3/AMITSHIDE/react-todo-hooks/src/Serivces/actions/todo-actions.js",[],"/home/am-n3/AMITSHIDE/react-todo-hooks/src/Serivces/actions/todo-modal-actions.js",[],"/home/am-n3/AMITSHIDE/react-todo-hooks/src/Serivces/htttp-service.js",[],["125","126"],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":4,"column":8,"nodeType":"133","messageId":"134","endLine":4,"endColumn":19},{"ruleId":"135","severity":1,"message":"136","line":4,"column":1,"nodeType":"137","endLine":12,"endColumn":2},{"ruleId":"138","severity":1,"message":"139","line":13,"column":12,"nodeType":"140","endLine":13,"endColumn":40},{"ruleId":"131","severity":1,"message":"141","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":26},{"ruleId":"131","severity":1,"message":"142","line":4,"column":10,"nodeType":"133","messageId":"134","endLine":4,"endColumn":17},{"ruleId":"131","severity":1,"message":"143","line":8,"column":21,"nodeType":"133","messageId":"134","endLine":8,"endColumn":37},{"ruleId":"131","severity":1,"message":"144","line":19,"column":7,"nodeType":"133","messageId":"134","endLine":19,"endColumn":20},{"ruleId":"131","severity":1,"message":"145","line":46,"column":11,"nodeType":"133","messageId":"134","endLine":46,"endColumn":16},{"ruleId":"138","severity":1,"message":"146","line":61,"column":8,"nodeType":"147","endLine":61,"endColumn":27,"suggestions":"148"},{"ruleId":"131","severity":1,"message":"149","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"150","line":2,"column":45,"nodeType":"133","messageId":"134","endLine":2,"endColumn":55},{"ruleId":"131","severity":1,"message":"151","line":2,"column":57,"nodeType":"133","messageId":"134","endLine":2,"endColumn":66},{"ruleId":"135","severity":1,"message":"136","line":2,"column":1,"nodeType":"137","endLine":27,"endColumn":2},{"ruleId":"131","severity":1,"message":"152","line":23,"column":19,"nodeType":"133","messageId":"134","endLine":23,"endColumn":26},{"ruleId":"131","severity":1,"message":"141","line":2,"column":17,"nodeType":"133","messageId":"134","endLine":2,"endColumn":26},{"ruleId":"131","severity":1,"message":"142","line":3,"column":10,"nodeType":"133","messageId":"134","endLine":3,"endColumn":17},{"ruleId":"131","severity":1,"message":"153","line":8,"column":8,"nodeType":"133","messageId":"134","endLine":8,"endColumn":19},{"ruleId":"131","severity":1,"message":"141","line":1,"column":10,"nodeType":"133","messageId":"134","endLine":1,"endColumn":19},{"ruleId":"131","severity":1,"message":"141","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":19},{"ruleId":"131","severity":1,"message":"154","line":2,"column":21,"nodeType":"133","messageId":"134","endLine":2,"endColumn":30},{"ruleId":"131","severity":1,"message":"142","line":3,"column":10,"nodeType":"133","messageId":"134","endLine":3,"endColumn":17},{"ruleId":"131","severity":1,"message":"155","line":6,"column":8,"nodeType":"133","messageId":"134","endLine":6,"endColumn":19},{"ruleId":"131","severity":1,"message":"156","line":7,"column":10,"nodeType":"133","messageId":"134","endLine":7,"endColumn":17},{"ruleId":"131","severity":1,"message":"157","line":7,"column":19,"nodeType":"133","messageId":"134","endLine":7,"endColumn":29},{"ruleId":"131","severity":1,"message":"158","line":81,"column":7,"nodeType":"133","messageId":"134","endLine":81,"endColumn":23},{"ruleId":"127","replacedBy":"159"},{"ruleId":"129","replacedBy":"160"},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'interceptor' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","Assignments to the 'user' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'Component' is defined but never used.","'connect' is defined but never used.","'resetValidiation' is defined but never used.","'mapStoreProps' is assigned a value but never used.","'color' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["163"],"'useState' is defined but never used.","'FieldArray' is defined but never used.","'FastField' is defined but never used.","'decoded' is assigned a value but never used.","'todoReducer' is defined but never used.","'useEffect' is defined but never used.","'todoService' is defined but never used.","'addTodo' is defined but never used.","'updateTodo' is defined but never used.","'modalStateMapper' is assigned a value but never used.",["161"],["162"],"no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},"Update the dependencies array to be: [isActionPerformed, props.history]",{"range":"166","text":"167"},[2005,2024],"[isActionPerformed, props.history]"]